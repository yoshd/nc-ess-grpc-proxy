// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ess.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	ess.proto

It has these top-level messages:
	SendEmailRequest
	AuthInfo
	SendEmailReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendEmailRequest struct {
	Auth     *AuthInfo `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	FromAddr string    `protobuf:"bytes,2,opt,name=from_addr,json=fromAddr" json:"from_addr,omitempty"`
	ToAddrs  []string  `protobuf:"bytes,3,rep,name=to_addrs,json=toAddrs" json:"to_addrs,omitempty"`
	Subject  string    `protobuf:"bytes,4,opt,name=subject" json:"subject,omitempty"`
	Body     string    `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
}

func (m *SendEmailRequest) Reset()                    { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()               {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendEmailRequest) GetAuth() *AuthInfo {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SendEmailRequest) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *SendEmailRequest) GetToAddrs() []string {
	if m != nil {
		return m.ToAddrs
	}
	return nil
}

func (m *SendEmailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SendEmailRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type AuthInfo struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AuthInfo) Reset()                    { *m = AuthInfo{} }
func (m *AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*AuthInfo) ProtoMessage()               {}
func (*AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SendEmailReply struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SendEmailReply) Reset()                    { *m = SendEmailReply{} }
func (m *SendEmailReply) String() string            { return proto.CompactTextString(m) }
func (*SendEmailReply) ProtoMessage()               {}
func (*SendEmailReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SendEmailReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*SendEmailRequest)(nil), "SendEmailRequest")
	proto.RegisterType((*AuthInfo)(nil), "AuthInfo")
	proto.RegisterType((*SendEmailReply)(nil), "SendEmailReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ESSProxy service

type ESSProxyClient interface {
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error)
}

type eSSProxyClient struct {
	cc *grpc.ClientConn
}

func NewESSProxyClient(cc *grpc.ClientConn) ESSProxyClient {
	return &eSSProxyClient{cc}
}

func (c *eSSProxyClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error) {
	out := new(SendEmailReply)
	err := grpc.Invoke(ctx, "/ESSProxy/SendEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ESSProxy service

type ESSProxyServer interface {
	SendEmail(context.Context, *SendEmailRequest) (*SendEmailReply, error)
}

func RegisterESSProxyServer(s *grpc.Server, srv ESSProxyServer) {
	s.RegisterService(&_ESSProxy_serviceDesc, srv)
}

func _ESSProxy_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ESSProxyServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ESSProxy/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ESSProxyServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ESSProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ESSProxy",
	HandlerType: (*ESSProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEmail",
			Handler:    _ESSProxy_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ess.proto",
}

func init() { proto.RegisterFile("ess.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x49, 0x1b, 0xda, 0xf8, 0x90, 0xf8, 0x73, 0x03, 0x32, 0x45, 0x48, 0x51, 0xa6, 0x4c,
	0x91, 0x28, 0x33, 0x43, 0x2b, 0x75, 0x60, 0x43, 0xce, 0xc6, 0x82, 0x1c, 0xec, 0xaa, 0xa0, 0x24,
	0x0e, 0x3e, 0x5b, 0x90, 0x4f, 0xc2, 0xd7, 0x45, 0xb1, 0x9a, 0x0a, 0xba, 0xf9, 0xf7, 0x9e, 0xee,
	0xfc, 0xee, 0x01, 0xd3, 0x44, 0x45, 0x67, 0x8d, 0x33, 0xd9, 0x4f, 0x04, 0x97, 0xa5, 0x6e, 0xd5,
	0xa6, 0x91, 0xef, 0xb5, 0xd0, 0x9f, 0x5e, 0x93, 0xc3, 0x3b, 0x88, 0xa5, 0x77, 0x3b, 0x1e, 0xa5,
	0x51, 0x7e, 0xb6, 0x64, 0xc5, 0xca, 0xbb, 0xdd, 0x53, 0xbb, 0x35, 0x22, 0xc8, 0x78, 0x0b, 0x6c,
	0x6b, 0x4d, 0xf3, 0x2a, 0x95, 0xb2, 0x7c, 0x92, 0x46, 0x39, 0x13, 0xc9, 0x20, 0xac, 0x94, 0xb2,
	0x78, 0x03, 0x89, 0x33, 0xc1, 0x22, 0x3e, 0x4d, 0xa7, 0x39, 0x13, 0x73, 0x67, 0x06, 0x87, 0x90,
	0xc3, 0x9c, 0x7c, 0xf5, 0xa1, 0xdf, 0x1c, 0x8f, 0xc3, 0xd4, 0x88, 0x88, 0x10, 0x57, 0x46, 0xf5,
	0xfc, 0x34, 0xc8, 0xe1, 0x9d, 0xad, 0x21, 0x19, 0xff, 0xc5, 0x05, 0x24, 0x9e, 0xb4, 0x6d, 0x65,
	0xa3, 0x43, 0x28, 0x26, 0x0e, 0x3c, 0x78, 0x9d, 0x24, 0xfa, 0x32, 0x56, 0x8d, 0x61, 0x46, 0xce,
	0x72, 0x38, 0xff, 0x73, 0x5c, 0x57, 0xf7, 0x78, 0x0d, 0x33, 0xab, 0xc9, 0xd7, 0x6e, 0xbf, 0x67,
	0x4f, 0xcb, 0x47, 0x48, 0x36, 0x65, 0xf9, 0x6c, 0xcd, 0x77, 0x8f, 0xf7, 0xc0, 0x0e, 0x53, 0x78,
	0x55, 0x1c, 0xd7, 0xb3, 0xb8, 0x28, 0xfe, 0x2f, 0xcd, 0x4e, 0xd6, 0xf1, 0xcb, 0xa4, 0xab, 0xaa,
	0x59, 0xe8, 0xf4, 0xe1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x34, 0xec, 0x80, 0x60, 0x01, 0x00,
	0x00,
}
